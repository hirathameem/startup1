# cd.yml
name: CD

on:
  push:
    branches:
      - Release10
  #  release:
  #     types: [published]
      

jobs:
  generate_release:
    outputs:
      changelog: ${{ steps.build_release.outputs.changelog }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build Changelog
        id: build_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/configs/configuration.json"
          repo: "startup1"
          fromTag: "v1.1.0"
          toTag: "main"
          includeOpen: false
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}

  # CI
  build_android:
    runs-on: ubuntu-latest
    needs: generate_release
    defaults:
      run:
        working-directory: ./android
    outputs:
      Version: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
    steps:
    # checkout the repo
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Generate private_service_account.json file
        run: echo ${{secrets.PRIVATE_SERVICE_ACCOUNT_KEY}} | base64 -d > /home/runner/work/startup1/startup1/android/private_service_account_key.json
        env:
          PRIVATE_SERVICE_ACCOUNT: ${{ secrets.PRIVATE_SERVICE_ACCOUNT_KEY }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.3.0
        with:
          flutter-version: "3.3.1"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.1.420"
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.10.0"
      - name: Determine Version
        id: gitversion #step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Display GitVersion outputs
        run: |
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.ouputs.nuGetVersionV2 }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
        
      #Update version code

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 227
        run: |
            VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
            echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update version code
        uses: chkfung/android-version_actions@v1.1
        with:
          gradlePath: android/app/build.gradle
          versionCode: ${{ env.version_code }}

        
      # - name: Build the bundle                                                                                                    
      #   run: flutter build appbundle --release
      # - name: Upload artifact to Github
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: release-aab
      #     path: build/app/outputs//bundle/release/app-release.aab
      - run: bundle install
      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$ANDROID_KEYSTORE_ALIAS" >> key.properties
          echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" >> key.properties
          echo "keyPassword=$ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      - run: bundle exec fastlane internal
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_STARTUP1 }}
          RELEASE_NOTES: ${{ needs.generate_release.outputs.changelog }}





  # # CD
  # deploy_android:
  #   runs-on: ubuntu-latest
  #   needs: [build_android]
  #   defaults:
  #     run:
  #       working-directory: ./android
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Setup JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: 11
  #     - name: Setup Android SDK
  #       uses: android-actions/setup-android@v2

  #     # - name: Decrypt Android keys
  #     #   run: sh ./.github/scripts/decrypt_android_secrets.sh
  #     #   env:
  #     #     ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2.3.0
  #       with:
  #         flutter-version: "3.3.1"
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.6
  #         bundler-cache: true
  #     - uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: "3.1.420"
  #     - name: Install GitVersion
  #       uses: gittools/actions/gitversion/setup@v0.9.13
  #       with:
  #         versionSpec: "5.10.0"
  #     - name: Determine Version
  #       id: gitversion
  #       uses: gittools/actions/gitversion/execute@v0.9.13
  #     # - name: Build the bundle
  #     #   run: flutter build appbundle --release
  #     # - name: Run Fastlane
  #     #   #run: bundle exec fastlane deploy
  #     #   uses: maierj/fastlane-action@v1.4.0
  #     #   with:
  #     #     lane: playstore
  #     #     subdirectory: android
  #       # env:
  #       #   FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_STARTUP1 }}
  #       #   RELEASE_NOTES: ${{ needs.generate_release.outputs.changelog }}
  #     - run: bundle install
  #     - name: Configure Keystore
  #       run: |
  #         echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
  #         echo "storeFile=upload-keystore.jks" >> key.properties
  #         echo "keyAlias=$ANDROID_KEYSTORE_ALIAS" >> key.properties
  #         echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" >> key.properties
  #         echo "keyPassword=$ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD" >> key.properties
  #       env:
  #         PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
  #         ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
  #         ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
  #         ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  #     - run: bundle exec fastlane playstore
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_STARTUP1 }}
  #         RELEASE_NOTES: ${{ needs.generate_release.outputs.changelog }}

          

        
      