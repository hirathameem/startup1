default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit new beta build for testing"
  lane :beta do
     sh "flutter build appbundle -v --build-number #{ENV['GITVERSION_BUILDMETADATA']} --build-name #{ENV['GITVERSION_MAJORMINORPATCH']} --release"
        firebase_app_distribution(
          app: "1:598133513450:android:9712712105eab7478e0b93",
          testers: "hirathameem@ymail.com",
          release_notes: "Lots of amazing new features to test out!" ,
          firebase_cli_token: ENV['FIREBASE_TOKEN_STARTUP1'],
          android_artifact_type: "AAB",
          android_artifact_path: '../build/app/outputs/bundle/release/app-release.aab'
        )
     end
  
  #Trial and Error
  desc “Deploy to closed beta track”
  lane :internal do
    sh "flutter build appbundle"
     begin
        gradle(task: “clean”)
        g = google_play_track_version_codes
        gb = google_play_track_version_codes(track: ‘internal’)
        ga = google_play_track_version_codes(track: ‘production’)
        max_value = [g[0].to_i, gb[0].to_i, ga[0].to_i].max
        puts “this is the version number”
        puts max_value
        version_updated = max_value + 1
        puts “this is the incremented version number”
        puts version_updated
        increment_version_code(gradle_file_path: “./app/build.gradle”, version_code: version_updated.to_i)
      gradle(
        task: “bundle”,
        build_type: ‘Release’
       )
    upload_to_play_store(
      track: ‘internal’,
      aab: ‘../build/app/outputs/bundle/release/app-release.aab’,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      release_status: “draft”,
      )
    end






  

  # #Internal Script
  # desc "Submit a new Internal Build to Play Store"
  # lane :internal do 
    
  #   sh "flutter build appbundle -v --build-number #{ENV['GITVERSION_BUILDMETADATA']} --build-name #{ENV['GITVERSION_MAJORMINORPATCH']} --release"
  #   upload_to_play_store(
  #     track: 'internal',package_name: 'com.nathira.startup1', 
  #     aab: '../build/app/outputs/bundle/release/app-release.aab',
  #     json_key: "private_service_account_key.json"
  #   )
  #   end

  # #Deploy to Alpha lane
  # desc "Submit to Alpha lane in Play Store"
  # lane :alpha do 
  #   upload_to_play_store(
  #     track: 'alpha',
  #     package_name: 'com.nathira.startup1', 
  #     aab: '../build/app/outputs/bundle/release/app-release.aab',
  #     json_key: "service_account_key.json"
  #   )
  #   end

  #Deploy to Beta lane
  # desc "Submit to Beta lane in Play Store"
  # lane :beta do 
  #   upload_to_play_store(
  #     track: 'beta',
  #     package_name: 'com.nathira.startup1', 
  #     aab: '../build/app/outputs/bundle/release/app-release.aab',
  #     json_key: "service-account-key.json"
  #   )
  #   end

#Production script

  desc "Deploy to production"
  lane :playstore do
    sh "flutter build appbundle -v --build-number #{ENV['GITVERSION_BUILDMETADATA']} --build-name #{ENV['GITVERSION_MAJORMINORPATCH']} --release"
      upload_to_play_store(
         package_name: 'com.nathira.startup1', 
         track: 'production', 
         aab: '../build/app/outputs/bundle/release/app-release.aab',
         json_key: "private_service_account_key.json"
      )
      end
  end